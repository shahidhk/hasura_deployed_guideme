apiVersion: v1
items:
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    creationTimestamp: null
    labels:
      app: api
      hasuraService: custom
    name: api
    namespace: '{{ cluster.metadata.namespaces.user }}'
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: api
      spec:
        volumes:
        - name: shared-data
          hostPath:
            path: /data/shared-data
        containers:
        - image: hasura/base-git-image:0.7
          imagePullPolicy: IfNotPresent
          env:
          - name: PRODUCTION
            value: "true"
          name: python 
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          volumeMounts:
          - name: shared-data
            mountPath: /shared-data
        - image: hasura/base-git-image:0.7
          env:
          - name: PRODUCTION
            value: "true"
          imagePullPolicy: IfNotPresent
          name: php 
          ports:
          - containerPort: 8000
            protocol: TCP
          resources: {}
          volumeMounts:
          - name: shared-data
            mountPath: /shared-data
        securityContext: {}
        terminationGracePeriodSeconds: 0
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: api
      hasuraService: custom
    name: api
    namespace: '{{ cluster.metadata.namespaces.user }}'
  spec:
    ports:
    - port: 8080
      name: python
      protocol: TCP
      targetPort: 8080
    - port: 8000
      name: php
      protocol: TCP
      targetPort: 8000
    selector:
      app: api
    type: ClusterIP
  status:
    loadBalancer: {}
kind: List
metadata: {}
